name: Continuous Integration

on: [pull_request]

jobs:
# Service
  # Dependencies
  serviceDependencies:
    runs-on: ubuntu-latest
    steps:
      # Pull Repository
      - name: Pull repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # Fetch Branch
      - name: Fetch ${{github.head_ref}}
        run: git fetch origin ${{github.head_ref}}

      # Install Node
      - name: Install Node
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      # Get Cached Dependencies
      - name: Get Cached Dependencies
        uses: actions/cache@v2
        id: npm-cache
        with:
          path: node_modules
          key: node-modules-${{ hashfiles('service/package-lock.json') }}

      # Install Dependencies
      - name: Install Dependencies
        run: npm install

  # Lint
  serviceLint:
    needs: Dependencies
    runs-on: ubuntu-latest
    steps:
      # Pull Repository
      - name: Pull Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # Fetch Branch
      - name: Fetch ${{github.head_ref}}
        run: git fetch origin ${{github.head_ref}}

      # Get Cached Dependencies
      - name: Get Cached Dependencies
        uses: actions/cache@v2
        id: npm-cache
        with:
          path: node_modules
          key: node-modules-${{ hashfiles('service/package-lock.json') }}

        # Lint
      - name: Lint
        run: npm run lint

  # Build
  serviceBuild:
    needs: Dependencies
    runs-on: ubuntu-latest
    steps:
      # Pull Repository
      - name: Pull Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # Fetch Branch
      - name: Fetch ${{github.head_ref}}
        run: git fetch origin ${{github.head_ref}}

      # Install Node
      - name: Install Node
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      # Get Cached Dependencies
      - name: Get Cached Dependencies
        uses: actions/cache@v2
        id: npm-cache
        with:
          path: node_modules
          key: node-modules-${{ hashfiles('service/package-lock.json') }}

      # Install Dependencies
      - name: Install Dependencies
        run: npm install

      # # Prisma Generate
      # - name: Prisma Generate
      #   run: yarn prisma:generate

      # Build
      - name: Build
        run: npm run build

  # Test
  serviceTest:
    needs: Dependencies
    runs-on: ubuntu-latest
    steps:
      # Pull Repository
      - name: Pull Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # Fetch Branch
      - name: Fetch ${{github.head_ref}}
        run: git fetch origin ${{github.head_ref}}

      # Get Cached Dependencies
      - name: Get Cached Dependencies
        uses: actions/cache@v2
        id: npm-cache
        with:
          path: node_modules
          key: node-modules-${{ hashfiles('service/package-lock.json') }}

      # # Prisma Generate
      # - name: Prisma Generate
      #   run: yarn prisma:generate

        # Test
      - name: Test
        run: npm run test

# API
   # Dependencies
  api-gatewayDependencies:
    runs-on: ubuntu-latest
    steps:
      # Pull Repository
      - name: Pull repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # Fetch Branch
      - name: Fetch ${{github.head_ref}}
        run: git fetch origin ${{github.head_ref}}

      # Install Node
      - name: Install Node
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      # Get Cached Dependencies
      - name: Get Cached Dependencies
        uses: actions/cache@v2
        id: npm-cache
        with:
          path: node_modules
          key: node-modules-${{ hashfiles('api-gateway/package-lock.json') }}

      # Install Dependencies
      - name: Install Dependencies
        run: npm install

  # Lint
  api-gatewayLint:
    needs: Dependencies
    runs-on: ubuntu-latest
    steps:
      # Pull Repository
      - name: Pull Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # Fetch Branch
      - name: Fetch ${{github.head_ref}}
        run: git fetch origin ${{github.head_ref}}

      # Get Cached Dependencies
      - name: Get Cached Dependencies
        uses: actions/cache@v2
        id: npm-cache
        with:
          path: node_modules
          key: node-modules-${{ hashfiles('api-gateway/package-lock.json') }}

        # Lint
      - name: Lint
        run: npm run lint

  # Build
  api-gatewayBuild:
    needs: Dependencies
    runs-on: ubuntu-latest
    steps:
      # Pull Repository
      - name: Pull Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # Fetch Branch
      - name: Fetch ${{github.head_ref}}
        run: git fetch origin ${{github.head_ref}}

      # Install Node
      - name: Install Node
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      # Get Cached Dependencies
      - name: Get Cached Dependencies
        uses: actions/cache@v2
        id: npm-cache
        with:
          path: node_modules
          key: node-modules-${{ hashfiles('api-gateway/package-lock.json') }}

      # Install Dependencies
      - name: Install Dependencies
        run: npm install

      # # Prisma Generate
      # - name: Prisma Generate
      #   run: yarn prisma:generate

      # Build
      - name: Build
        run: npm run build

  # Test
  api-gatewayTest:
    needs: Dependencies
    runs-on: ubuntu-latest
    steps:
      # Pull Repository
      - name: Pull Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # Fetch Branch
      - name: Fetch ${{github.head_ref}}
        run: git fetch origin ${{github.head_ref}}

      # Get Cached Dependencies
      - name: Get Cached Dependencies
        uses: actions/cache@v2
        id: npm-cache
        with:
          path: node_modules
          key: node-modules-${{ hashfiles('api-gateway/package-lock.json') }}

      # # Prisma Generate
      # - name: Prisma Generate
      #   run: yarn prisma:generate

        # Test
      - name: Test
        run: npm run test